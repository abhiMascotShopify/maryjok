{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.recover.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\n\nexport async function loader({context}) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (customerAccessToken) {\n    return redirect('/account');\n  }\n\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {storefront} = context;\n  const form = await request.formData();\n  const email = form.has('email') ? String(form.get('email')) : null;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    if (!email) {\n      throw new Error('Please provide an email.');\n    }\n    await storefront.mutate(CUSTOMER_RECOVER_MUTATION, {\n      variables: {email},\n    });\n\n    return json({resetRequested: true});\n  } catch (error) {\n    const resetRequested = false;\n    if (error instanceof Error) {\n      return json({error: error.message, resetRequested}, {status: 400});\n    }\n    return json({error, resetRequested}, {status: 400});\n  }\n}\n\nexport default function Recover() {\n  const action = useActionData();\n\n  return (\n    <>\n    {/*<div className=\"account-recover\">\n      <div>\n        {action?.resetRequested ? (\n          <>\n            <h1>Request Sent.</h1>\n            <p>\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n            <br />\n            <Link to=\"/account/login\">Return to Login</Link>\n          </>\n        ) : (\n          <>\n            <h1>Forgot Password.</h1>\n            <p>\n              Enter the email address associated with your account to receive a\n              link to reset your password.\n            </p>\n            <br />\n            <Form method=\"POST\">\n              <fieldset>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  aria-label=\"Email address\"\n                  autoComplete=\"email\"\n                  // eslint-disable-next-line jsx-a11y/no-autofocus\n                  autoFocus\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  required\n                  type=\"email\"\n                />\n              </fieldset>\n              {action?.error ? (\n                <p>\n                  <mark>\n                    <small>{action.error}</small>\n                  </mark>\n                </p>\n              ) : (\n                <br />\n              )}\n              <button type=\"submit\">Request Reset Link</button>\n            </Form>\n            <div>\n              <br />\n              <p>\n                <Link to=\"/account/login\">Login \u2192</Link>\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n              </div>*/}\n              <div className=\"flex flex-col sm:flex-row\">\n<div className=\"sm:w-1/2  sm:block\">\n\n        <img\n          src=\"https://cdn.shopify.com/s/files/1/0809/4253/0882/files/LoginSideImg-Photoroom_1_2.png?v=1709296234\"\n          alt=\"Login Background\"\n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      {action?.resetRequested ? (\n          <>\n            <h1>Request Sent.</h1>\n            <p>\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n            <br />\n            <Link to=\"/account/login\">Return to Login</Link>\n          </>\n        ) : (\n      <div className=\"w-full justify-center items-center flex flex-col\">\n  <Form className=\"w-full justify-center items-center login_wrapper\" method=\"POST\">\n   <fieldset>\n    <div className=\"mb-3\" >\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n        Email\n      </label>\n      <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n       aria-label=\"Email address\"\n       autoComplete=\"email\"\n       // eslint-disable-next-line jsx-a11y/no-autofocus\n       autoFocus\n       id=\"email\"\n       name=\"email\"\n       placeholder=\"Email address\"\n       required\n       type=\"email\"/>\n    </div>\n    <div className=\"flex items-center justify-between\">\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n        Request Reset Link\n      </button>\n      <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"/account/login\">\n        Login\n      </a>\n    </div>\n     </fieldset>\n    \n  </Form>\n  <p className=\"text-center text-gray-500 text-xs\">\n    &copy;2023. All rights reserved.\n  </p>\n</div>)}\n      \n    </div>\n              </>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customerrecover\nconst CUSTOMER_RECOVER_MUTATION = `#graphql\n  mutation customerRecover(\n    $email: String!,\n    $country: CountryCode,\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customerRecover(email: $email) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;AAwGQ;AAjEO,SAAR,UAA2B;AAChC,QAAM,SAAS,cAAc;AAE7B,SACE,sFA0DU,6DAAC,SAAI,WAAU,6BAC7B;AAAA,uDAAC,SAAI,WAAU,sBAEP;AAAA,MAAC;AAAA;AAAA,QACC,KAAI;AAAA,QACJ,KAAI;AAAA,QACJ,WAAU;AAAA;AAAA,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA,KANR;AAAA;AAAA;AAAA;AAAA,WAOM;AAAA,IACC,QAAQ,iBACL,sFACE;AAAA,yDAAC,QAAG,6BAAJ;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,MACjB,mDAAC,OAAE,sJAAH;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACJ,mDAAC,QAAK,IAAG,kBAAiB,+BAA1B;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,SAR3C;AAAA;AAAA;AAAA;AAAA,WASA,IAEJ,mDAAC,SAAI,WAAU,oDACnB;AAAA,yDAAC,QAAK,WAAU,oDAAmD,QAAO,QACzE,6DAAC,cACA;AAAA,2DAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,8CAA6C,KAAI,YAAW,qBAA7E;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cAAM,WAAU;AAAA,cAChB,cAAW;AAAA,cACX,cAAa;AAAA,cAEb,WAAS;AAAA,cACT,IAAG;AAAA,cACH,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,UAAQ;AAAA,cACR,MAAK;AAAA;AAAA,YATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASa;AAAA,aAbf;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,QACA,mDAAC,SAAI,WAAU,qCACb;AAAA,6DAAC,YAAO,WAAU,gHAA+G,MAAK,UAAS,kCAA/I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,OAAE,WAAU,mFAAkF,MAAK,kBAAiB,qBAArH;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,WAvBD;AAAA;AAAA;AAAA;AAAA,aAwBE,KAzBH;AAAA;AAAA;AAAA;AAAA,aA2BA;AAAA,MACA,mDAAC,OAAE,WAAU,qCAAoC,8CAAjD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SA/BI;AAAA;AAAA;AAAA;AAAA,WAgCN;AAAA,OArDc;AAAA;AAAA;AAAA;AAAA,SAuDV,KAjHA;AAAA;AAAA;AAAA;AAAA,SAkHU;AAEd;",
  "names": []
}
