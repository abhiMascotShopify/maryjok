{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).offers.jsx"],
  "sourcesContent": ["import {defer} from '@shopify/remix-oxygen';\nimport CustomizedCollection from '../components/CustomizedCollection';\nimport OfferCarousel from \"../components/OfferCarousel\"\nimport {useLoaderData} from '@remix-run/react';\n\nexport const meta = () => {\n  return [{title: 'Login'}];\n};\n\nexport async function loader({context}) {\n  const {storefront} = context;\n  const {collections} = await storefront.query(FEATURED_COLLECTION_QUERY);\n  const collectionProducts = collections;\n  return defer({\n    collectionProducts\n  });\n}\n\nexport default function Offers() {\n  const data = useLoaderData();\n  var GiftCollections = [];\n    data.collectionProducts.nodes.forEach((col) => {\n    if (col.title == \"Gift Under 500\" || col.title == \"Gift Under 1000\" || col.title == \"Gifts Under 2000\") {\n      GiftCollections.push(col);\n    }\n  });\n  // console.log(\"Offers::\",GiftCollections)\n  GiftCollections = GiftCollections;\n  return (\n    <>\n      <div className=\"page\">\n        <OfferCarousel collections={GiftCollections} title={'Gifting Offers'} />\n      </div>\n    </>\n  );\n}\n\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    products(first:100){\n      edges{\n        node{\n          id\n          title\n          \n          handle\n          variants(first: 100) {\n          edges {\n          node {\n                id\n                metafields(identifiers: [{namespace: \"custom\", key: \"isdefault\"} ]){\n                          key\n                          value\n                        }\n                }\n              }\n        }\n          images(first:1){\n            edges{\n              node{\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n    id\n    title\n    metafields(identifiers: [{namespace: \"custom\", key: \"from_customer_inbox\"}, {namespace: \"custom\", key: \"1_custom_colllection\"}]){\n      id\n      key\n      namespace\n      value\n    }\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    description\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 100) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;AA6BI;AAxBG,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC,EAAC,OAAO,QAAO,CAAC;AAC1B;AAWe,SAAR,SAA0B;AAC/B,QAAM,OAAO,cAAc;AAC3B,MAAI,kBAAkB,CAAC;AACrB,OAAK,mBAAmB,MAAM,QAAQ,CAAC,QAAQ;AAC/C,QAAI,IAAI,SAAS,oBAAoB,IAAI,SAAS,qBAAqB,IAAI,SAAS,oBAAoB;AACtG,sBAAgB,KAAK,GAAG;AAAA,IAC1B;AAAA,EACF,CAAC;AAED,oBAAkB;AAClB,SACE,sFACE,6DAAC,SAAI,WAAU,QACb,6DAAC,yBAAc,aAAa,iBAAiB,OAAO,oBAApD;AAAA;AAAA;AAAA;AAAA,SAAsE,KADxE;AAAA;AAAA;AAAA;AAAA,SAEA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;",
  "names": []
}
